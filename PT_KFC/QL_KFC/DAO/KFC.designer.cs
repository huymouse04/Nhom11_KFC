#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLKFC")]
	public partial class KFCDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBan(Ban instance);
    partial void UpdateBan(Ban instance);
    partial void DeleteBan(Ban instance);
    partial void InsertThucDon(ThucDon instance);
    partial void UpdateThucDon(ThucDon instance);
    partial void DeleteThucDon(ThucDon instance);
    partial void InsertCombo(Combo instance);
    partial void UpdateCombo(Combo instance);
    partial void DeleteCombo(Combo instance);
    partial void InsertChiTietCombo(ChiTietCombo instance);
    partial void UpdateChiTietCombo(ChiTietCombo instance);
    partial void DeleteChiTietCombo(ChiTietCombo instance);
    partial void InsertChiTietDonDat(ChiTietDonDat instance);
    partial void UpdateChiTietDonDat(ChiTietDonDat instance);
    partial void DeleteChiTietDonDat(ChiTietDonDat instance);
    partial void InsertDoanhThu(DoanhThu instance);
    partial void UpdateDoanhThu(DoanhThu instance);
    partial void DeleteDoanhThu(DoanhThu instance);
    partial void InsertDonDat(DonDat instance);
    partial void UpdateDonDat(DonDat instance);
    partial void DeleteDonDat(DonDat instance);
    partial void InsertHoaDon(HoaDon instance);
    partial void UpdateHoaDon(HoaDon instance);
    partial void DeleteHoaDon(HoaDon instance);
    partial void InsertKhachHangThanThiet(KhachHangThanThiet instance);
    partial void UpdateKhachHangThanThiet(KhachHangThanThiet instance);
    partial void DeleteKhachHangThanThiet(KhachHangThanThiet instance);
    partial void InsertKho(Kho instance);
    partial void UpdateKho(Kho instance);
    partial void DeleteKho(Kho instance);
    partial void InsertKhuyenMai(KhuyenMai instance);
    partial void UpdateKhuyenMai(KhuyenMai instance);
    partial void DeleteKhuyenMai(KhuyenMai instance);
    partial void InsertLoaiHang(LoaiHang instance);
    partial void UpdateLoaiHang(LoaiHang instance);
    partial void DeleteLoaiHang(LoaiHang instance);
    partial void InsertNhaCungCap(NhaCungCap instance);
    partial void UpdateNhaCungCap(NhaCungCap instance);
    partial void DeleteNhaCungCap(NhaCungCap instance);
    partial void InsertNhanVien(NhanVien instance);
    partial void UpdateNhanVien(NhanVien instance);
    partial void DeleteNhanVien(NhanVien instance);
    partial void InsertNhapHang(NhapHang instance);
    partial void UpdateNhapHang(NhapHang instance);
    partial void DeleteNhapHang(NhapHang instance);
    partial void InsertLuong(Luong instance);
    partial void UpdateLuong(Luong instance);
    partial void DeleteLuong(Luong instance);
    #endregion
		
		public KFCDataContext() : 
				base(global::DAO.Properties.Settings.Default.QLKFCConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public KFCDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KFCDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KFCDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KFCDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Ban> Bans
		{
			get
			{
				return this.GetTable<Ban>();
			}
		}
		
		public System.Data.Linq.Table<ThucDon> ThucDons
		{
			get
			{
				return this.GetTable<ThucDon>();
			}
		}
		
		public System.Data.Linq.Table<Combo> Combos
		{
			get
			{
				return this.GetTable<Combo>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietCombo> ChiTietCombos
		{
			get
			{
				return this.GetTable<ChiTietCombo>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietDonDat> ChiTietDonDats
		{
			get
			{
				return this.GetTable<ChiTietDonDat>();
			}
		}
		
		public System.Data.Linq.Table<DoanhThu> DoanhThus
		{
			get
			{
				return this.GetTable<DoanhThu>();
			}
		}
		
		public System.Data.Linq.Table<DonDat> DonDats
		{
			get
			{
				return this.GetTable<DonDat>();
			}
		}
		
		public System.Data.Linq.Table<HoaDon> HoaDons
		{
			get
			{
				return this.GetTable<HoaDon>();
			}
		}
		
		public System.Data.Linq.Table<KhachHangThanThiet> KhachHangThanThiets
		{
			get
			{
				return this.GetTable<KhachHangThanThiet>();
			}
		}
		
		public System.Data.Linq.Table<Kho> Khos
		{
			get
			{
				return this.GetTable<Kho>();
			}
		}
		
		public System.Data.Linq.Table<KhuyenMai> KhuyenMais
		{
			get
			{
				return this.GetTable<KhuyenMai>();
			}
		}
		
		public System.Data.Linq.Table<LoaiHang> LoaiHangs
		{
			get
			{
				return this.GetTable<LoaiHang>();
			}
		}
		
		public System.Data.Linq.Table<NhaCungCap> NhaCungCaps
		{
			get
			{
				return this.GetTable<NhaCungCap>();
			}
		}
		
		public System.Data.Linq.Table<NhanVien> NhanViens
		{
			get
			{
				return this.GetTable<NhanVien>();
			}
		}
		
		public System.Data.Linq.Table<NhapHang> NhapHangs
		{
			get
			{
				return this.GetTable<NhapHang>();
			}
		}
		
		public System.Data.Linq.Table<Luong> Luongs
		{
			get
			{
				return this.GetTable<Luong>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ban")]
	public partial class Ban : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaBan;
		
		private string _TenBan;
		
		private System.Nullable<bool> _TrangThaiBan;
		
		private EntitySet<DonDat> _DonDats;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBanChanging(string value);
    partial void OnMaBanChanged();
    partial void OnTenBanChanging(string value);
    partial void OnTenBanChanged();
    partial void OnTrangThaiBanChanging(System.Nullable<bool> value);
    partial void OnTrangThaiBanChanged();
    #endregion
		
		public Ban()
		{
			this._DonDats = new EntitySet<DonDat>(new Action<DonDat>(this.attach_DonDats), new Action<DonDat>(this.detach_DonDats));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBan", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaBan
		{
			get
			{
				return this._MaBan;
			}
			set
			{
				if ((this._MaBan != value))
				{
					this.OnMaBanChanging(value);
					this.SendPropertyChanging();
					this._MaBan = value;
					this.SendPropertyChanged("MaBan");
					this.OnMaBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenBan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenBan
		{
			get
			{
				return this._TenBan;
			}
			set
			{
				if ((this._TenBan != value))
				{
					this.OnTenBanChanging(value);
					this.SendPropertyChanging();
					this._TenBan = value;
					this.SendPropertyChanged("TenBan");
					this.OnTenBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThaiBan", DbType="Bit")]
		public System.Nullable<bool> TrangThaiBan
		{
			get
			{
				return this._TrangThaiBan;
			}
			set
			{
				if ((this._TrangThaiBan != value))
				{
					this.OnTrangThaiBanChanging(value);
					this.SendPropertyChanging();
					this._TrangThaiBan = value;
					this.SendPropertyChanged("TrangThaiBan");
					this.OnTrangThaiBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ban_DonDat", Storage="_DonDats", ThisKey="MaBan", OtherKey="MaBan")]
		public EntitySet<DonDat> DonDats
		{
			get
			{
				return this._DonDats;
			}
			set
			{
				this._DonDats.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DonDats(DonDat entity)
		{
			this.SendPropertyChanging();
			entity.Ban = this;
		}
		
		private void detach_DonDats(DonDat entity)
		{
			this.SendPropertyChanging();
			entity.Ban = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThucDon")]
	public partial class ThucDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSanPham;
		
		private string _TenSanPham;
		
		private System.Data.Linq.Binary _HinhAnh;
		
		private System.Nullable<double> _DonGia;
		
		private string _MaLoaiHang;
		
		private EntitySet<ChiTietDonDat> _ChiTietDonDats;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSanPhamChanging(string value);
    partial void OnMaSanPhamChanged();
    partial void OnTenSanPhamChanging(string value);
    partial void OnTenSanPhamChanged();
    partial void OnHinhAnhChanging(System.Data.Linq.Binary value);
    partial void OnHinhAnhChanged();
    partial void OnDonGiaChanging(System.Nullable<double> value);
    partial void OnDonGiaChanged();
    partial void OnMaLoaiHangChanging(string value);
    partial void OnMaLoaiHangChanged();
    #endregion
		
		public ThucDon()
		{
			this._ChiTietDonDats = new EntitySet<ChiTietDonDat>(new Action<ChiTietDonDat>(this.attach_ChiTietDonDats), new Action<ChiTietDonDat>(this.detach_ChiTietDonDats));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanPham", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSanPham
		{
			get
			{
				return this._MaSanPham;
			}
			set
			{
				if ((this._MaSanPham != value))
				{
					this.OnMaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaSanPham = value;
					this.SendPropertyChanged("MaSanPham");
					this.OnMaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSanPham", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string TenSanPham
		{
			get
			{
				return this._TenSanPham;
			}
			set
			{
				if ((this._TenSanPham != value))
				{
					this.OnTenSanPhamChanging(value);
					this.SendPropertyChanging();
					this._TenSanPham = value;
					this.SendPropertyChanged("TenSanPham");
					this.OnTenSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Float")]
		public System.Nullable<double> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiHang", DbType="VarChar(20)")]
		public string MaLoaiHang
		{
			get
			{
				return this._MaLoaiHang;
			}
			set
			{
				if ((this._MaLoaiHang != value))
				{
					this.OnMaLoaiHangChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiHang = value;
					this.SendPropertyChanged("MaLoaiHang");
					this.OnMaLoaiHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThucDon_ChiTietDonDat", Storage="_ChiTietDonDats", ThisKey="MaSanPham", OtherKey="MaSanPham")]
		public EntitySet<ChiTietDonDat> ChiTietDonDats
		{
			get
			{
				return this._ChiTietDonDats;
			}
			set
			{
				this._ChiTietDonDats.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDonDats(ChiTietDonDat entity)
		{
			this.SendPropertyChanging();
			entity.ThucDon = this;
		}
		
		private void detach_ChiTietDonDats(ChiTietDonDat entity)
		{
			this.SendPropertyChanging();
			entity.ThucDon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Combo")]
	public partial class Combo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaCombo;
		
		private string _TenCombo;
		
		private System.Nullable<double> _GiaCombo;
		
		private System.Nullable<System.DateTime> _ThoiGianHieuLuc;
		
		private EntitySet<ChiTietCombo> _ChiTietCombos;
		
		private EntitySet<ChiTietDonDat> _ChiTietDonDats;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaComboChanging(string value);
    partial void OnMaComboChanged();
    partial void OnTenComboChanging(string value);
    partial void OnTenComboChanged();
    partial void OnGiaComboChanging(System.Nullable<double> value);
    partial void OnGiaComboChanged();
    partial void OnThoiGianHieuLucChanging(System.Nullable<System.DateTime> value);
    partial void OnThoiGianHieuLucChanged();
    #endregion
		
		public Combo()
		{
			this._ChiTietCombos = new EntitySet<ChiTietCombo>(new Action<ChiTietCombo>(this.attach_ChiTietCombos), new Action<ChiTietCombo>(this.detach_ChiTietCombos));
			this._ChiTietDonDats = new EntitySet<ChiTietDonDat>(new Action<ChiTietDonDat>(this.attach_ChiTietDonDats), new Action<ChiTietDonDat>(this.detach_ChiTietDonDats));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCombo", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaCombo
		{
			get
			{
				return this._MaCombo;
			}
			set
			{
				if ((this._MaCombo != value))
				{
					this.OnMaComboChanging(value);
					this.SendPropertyChanging();
					this._MaCombo = value;
					this.SendPropertyChanged("MaCombo");
					this.OnMaComboChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenCombo", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string TenCombo
		{
			get
			{
				return this._TenCombo;
			}
			set
			{
				if ((this._TenCombo != value))
				{
					this.OnTenComboChanging(value);
					this.SendPropertyChanging();
					this._TenCombo = value;
					this.SendPropertyChanged("TenCombo");
					this.OnTenComboChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaCombo", DbType="Float")]
		public System.Nullable<double> GiaCombo
		{
			get
			{
				return this._GiaCombo;
			}
			set
			{
				if ((this._GiaCombo != value))
				{
					this.OnGiaComboChanging(value);
					this.SendPropertyChanging();
					this._GiaCombo = value;
					this.SendPropertyChanged("GiaCombo");
					this.OnGiaComboChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThoiGianHieuLuc", DbType="DateTime")]
		public System.Nullable<System.DateTime> ThoiGianHieuLuc
		{
			get
			{
				return this._ThoiGianHieuLuc;
			}
			set
			{
				if ((this._ThoiGianHieuLuc != value))
				{
					this.OnThoiGianHieuLucChanging(value);
					this.SendPropertyChanging();
					this._ThoiGianHieuLuc = value;
					this.SendPropertyChanged("ThoiGianHieuLuc");
					this.OnThoiGianHieuLucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Combo_ChiTietCombo", Storage="_ChiTietCombos", ThisKey="MaCombo", OtherKey="MaCombo")]
		public EntitySet<ChiTietCombo> ChiTietCombos
		{
			get
			{
				return this._ChiTietCombos;
			}
			set
			{
				this._ChiTietCombos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Combo_ChiTietDonDat", Storage="_ChiTietDonDats", ThisKey="MaCombo", OtherKey="MaCombo")]
		public EntitySet<ChiTietDonDat> ChiTietDonDats
		{
			get
			{
				return this._ChiTietDonDats;
			}
			set
			{
				this._ChiTietDonDats.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietCombos(ChiTietCombo entity)
		{
			this.SendPropertyChanging();
			entity.Combo = this;
		}
		
		private void detach_ChiTietCombos(ChiTietCombo entity)
		{
			this.SendPropertyChanging();
			entity.Combo = null;
		}
		
		private void attach_ChiTietDonDats(ChiTietDonDat entity)
		{
			this.SendPropertyChanging();
			entity.Combo = this;
		}
		
		private void detach_ChiTietDonDats(ChiTietDonDat entity)
		{
			this.SendPropertyChanging();
			entity.Combo = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietCombo")]
	public partial class ChiTietCombo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaChiTietCombo;
		
		private string _MaCombo;
		
		private string _MaSanPham;
		
		private int _SoLuong;
		
		private EntityRef<Combo> _Combo;
		
		private EntityRef<Kho> _Kho;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChiTietComboChanging(int value);
    partial void OnMaChiTietComboChanged();
    partial void OnMaComboChanging(string value);
    partial void OnMaComboChanged();
    partial void OnMaSanPhamChanging(string value);
    partial void OnMaSanPhamChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    #endregion
		
		public ChiTietCombo()
		{
			this._Combo = default(EntityRef<Combo>);
			this._Kho = default(EntityRef<Kho>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChiTietCombo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaChiTietCombo
		{
			get
			{
				return this._MaChiTietCombo;
			}
			set
			{
				if ((this._MaChiTietCombo != value))
				{
					this.OnMaChiTietComboChanging(value);
					this.SendPropertyChanging();
					this._MaChiTietCombo = value;
					this.SendPropertyChanged("MaChiTietCombo");
					this.OnMaChiTietComboChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCombo", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string MaCombo
		{
			get
			{
				return this._MaCombo;
			}
			set
			{
				if ((this._MaCombo != value))
				{
					if (this._Combo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaComboChanging(value);
					this.SendPropertyChanging();
					this._MaCombo = value;
					this.SendPropertyChanged("MaCombo");
					this.OnMaComboChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanPham", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string MaSanPham
		{
			get
			{
				return this._MaSanPham;
			}
			set
			{
				if ((this._MaSanPham != value))
				{
					if (this._Kho.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaSanPham = value;
					this.SendPropertyChanged("MaSanPham");
					this.OnMaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Combo_ChiTietCombo", Storage="_Combo", ThisKey="MaCombo", OtherKey="MaCombo", IsForeignKey=true)]
		public Combo Combo
		{
			get
			{
				return this._Combo.Entity;
			}
			set
			{
				Combo previousValue = this._Combo.Entity;
				if (((previousValue != value) 
							|| (this._Combo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Combo.Entity = null;
						previousValue.ChiTietCombos.Remove(this);
					}
					this._Combo.Entity = value;
					if ((value != null))
					{
						value.ChiTietCombos.Add(this);
						this._MaCombo = value.MaCombo;
					}
					else
					{
						this._MaCombo = default(string);
					}
					this.SendPropertyChanged("Combo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kho_ChiTietCombo", Storage="_Kho", ThisKey="MaSanPham", OtherKey="MaSanPham", IsForeignKey=true)]
		public Kho Kho
		{
			get
			{
				return this._Kho.Entity;
			}
			set
			{
				Kho previousValue = this._Kho.Entity;
				if (((previousValue != value) 
							|| (this._Kho.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kho.Entity = null;
						previousValue.ChiTietCombos.Remove(this);
					}
					this._Kho.Entity = value;
					if ((value != null))
					{
						value.ChiTietCombos.Add(this);
						this._MaSanPham = value.MaSanPham;
					}
					else
					{
						this._MaSanPham = default(string);
					}
					this.SendPropertyChanged("Kho");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietDonDat")]
	public partial class ChiTietDonDat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDonDat;
		
		private int _ID;
		
		private string _MaSanPham;
		
		private string _MaCombo;
		
		private int _SoLuong;
		
		private System.Nullable<double> _DonGia;
		
		private EntityRef<Combo> _Combo;
		
		private EntityRef<ThucDon> _ThucDon;
		
		private EntityRef<DonDat> _DonDat;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDonDatChanging(int value);
    partial void OnMaDonDatChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMaSanPhamChanging(string value);
    partial void OnMaSanPhamChanged();
    partial void OnMaComboChanging(string value);
    partial void OnMaComboChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnDonGiaChanging(System.Nullable<double> value);
    partial void OnDonGiaChanged();
    #endregion
		
		public ChiTietDonDat()
		{
			this._Combo = default(EntityRef<Combo>);
			this._ThucDon = default(EntityRef<ThucDon>);
			this._DonDat = default(EntityRef<DonDat>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDonDat", DbType="Int NOT NULL")]
		public int MaDonDat
		{
			get
			{
				return this._MaDonDat;
			}
			set
			{
				if ((this._MaDonDat != value))
				{
					if (this._DonDat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDonDatChanging(value);
					this.SendPropertyChanging();
					this._MaDonDat = value;
					this.SendPropertyChanged("MaDonDat");
					this.OnMaDonDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanPham", DbType="VarChar(30)")]
		public string MaSanPham
		{
			get
			{
				return this._MaSanPham;
			}
			set
			{
				if ((this._MaSanPham != value))
				{
					if (this._ThucDon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaSanPham = value;
					this.SendPropertyChanged("MaSanPham");
					this.OnMaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaCombo", DbType="VarChar(30)")]
		public string MaCombo
		{
			get
			{
				return this._MaCombo;
			}
			set
			{
				if ((this._MaCombo != value))
				{
					if (this._Combo.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaComboChanging(value);
					this.SendPropertyChanging();
					this._MaCombo = value;
					this.SendPropertyChanged("MaCombo");
					this.OnMaComboChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Float")]
		public System.Nullable<double> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Combo_ChiTietDonDat", Storage="_Combo", ThisKey="MaCombo", OtherKey="MaCombo", IsForeignKey=true)]
		public Combo Combo
		{
			get
			{
				return this._Combo.Entity;
			}
			set
			{
				Combo previousValue = this._Combo.Entity;
				if (((previousValue != value) 
							|| (this._Combo.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Combo.Entity = null;
						previousValue.ChiTietDonDats.Remove(this);
					}
					this._Combo.Entity = value;
					if ((value != null))
					{
						value.ChiTietDonDats.Add(this);
						this._MaCombo = value.MaCombo;
					}
					else
					{
						this._MaCombo = default(string);
					}
					this.SendPropertyChanged("Combo");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ThucDon_ChiTietDonDat", Storage="_ThucDon", ThisKey="MaSanPham", OtherKey="MaSanPham", IsForeignKey=true)]
		public ThucDon ThucDon
		{
			get
			{
				return this._ThucDon.Entity;
			}
			set
			{
				ThucDon previousValue = this._ThucDon.Entity;
				if (((previousValue != value) 
							|| (this._ThucDon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ThucDon.Entity = null;
						previousValue.ChiTietDonDats.Remove(this);
					}
					this._ThucDon.Entity = value;
					if ((value != null))
					{
						value.ChiTietDonDats.Add(this);
						this._MaSanPham = value.MaSanPham;
					}
					else
					{
						this._MaSanPham = default(string);
					}
					this.SendPropertyChanged("ThucDon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDat_ChiTietDonDat", Storage="_DonDat", ThisKey="MaDonDat", OtherKey="MaDonDat", IsForeignKey=true)]
		public DonDat DonDat
		{
			get
			{
				return this._DonDat.Entity;
			}
			set
			{
				DonDat previousValue = this._DonDat.Entity;
				if (((previousValue != value) 
							|| (this._DonDat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonDat.Entity = null;
						previousValue.ChiTietDonDats.Remove(this);
					}
					this._DonDat.Entity = value;
					if ((value != null))
					{
						value.ChiTietDonDats.Add(this);
						this._MaDonDat = value.MaDonDat;
					}
					else
					{
						this._MaDonDat = default(int);
					}
					this.SendPropertyChanged("DonDat");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DoanhThu")]
	public partial class DoanhThu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _MaNhapHang;
		
		private int _Thang;
		
		private int _Nam;
		
		private System.DateTime _NgayGhiNhan;
		
		private System.Nullable<int> _MaHoaDon;
		
		private System.Nullable<double> _TongChiTieu;
		
		private System.Nullable<double> _TongDoanhThu;
		
		private EntityRef<HoaDon> _HoaDon;
		
		private EntityRef<NhapHang> _NhapHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhapHangChanging(System.Nullable<int> value);
    partial void OnMaNhapHangChanged();
    partial void OnThangChanging(int value);
    partial void OnThangChanged();
    partial void OnNamChanging(int value);
    partial void OnNamChanged();
    partial void OnNgayGhiNhanChanging(System.DateTime value);
    partial void OnNgayGhiNhanChanged();
    partial void OnMaHoaDonChanging(System.Nullable<int> value);
    partial void OnMaHoaDonChanged();
    partial void OnTongChiTieuChanging(System.Nullable<double> value);
    partial void OnTongChiTieuChanged();
    partial void OnTongDoanhThuChanging(System.Nullable<double> value);
    partial void OnTongDoanhThuChanged();
    #endregion
		
		public DoanhThu()
		{
			this._HoaDon = default(EntityRef<HoaDon>);
			this._NhapHang = default(EntityRef<NhapHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhapHang", DbType="Int")]
		public System.Nullable<int> MaNhapHang
		{
			get
			{
				return this._MaNhapHang;
			}
			set
			{
				if ((this._MaNhapHang != value))
				{
					if (this._NhapHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNhapHangChanging(value);
					this.SendPropertyChanging();
					this._MaNhapHang = value;
					this.SendPropertyChanged("MaNhapHang");
					this.OnMaNhapHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thang", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Thang
		{
			get
			{
				return this._Thang;
			}
			set
			{
				if ((this._Thang != value))
				{
					this.OnThangChanging(value);
					this.SendPropertyChanging();
					this._Thang = value;
					this.SendPropertyChanged("Thang");
					this.OnThangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nam", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Nam
		{
			get
			{
				return this._Nam;
			}
			set
			{
				if ((this._Nam != value))
				{
					this.OnNamChanging(value);
					this.SendPropertyChanging();
					this._Nam = value;
					this.SendPropertyChanged("Nam");
					this.OnNamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGhiNhan", DbType="Date NOT NULL", IsPrimaryKey=true)]
		public System.DateTime NgayGhiNhan
		{
			get
			{
				return this._NgayGhiNhan;
			}
			set
			{
				if ((this._NgayGhiNhan != value))
				{
					this.OnNgayGhiNhanChanging(value);
					this.SendPropertyChanging();
					this._NgayGhiNhan = value;
					this.SendPropertyChanged("NgayGhiNhan");
					this.OnNgayGhiNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHoaDon", DbType="Int")]
		public System.Nullable<int> MaHoaDon
		{
			get
			{
				return this._MaHoaDon;
			}
			set
			{
				if ((this._MaHoaDon != value))
				{
					if (this._HoaDon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHoaDonChanging(value);
					this.SendPropertyChanging();
					this._MaHoaDon = value;
					this.SendPropertyChanged("MaHoaDon");
					this.OnMaHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongChiTieu", DbType="Float")]
		public System.Nullable<double> TongChiTieu
		{
			get
			{
				return this._TongChiTieu;
			}
			set
			{
				if ((this._TongChiTieu != value))
				{
					this.OnTongChiTieuChanging(value);
					this.SendPropertyChanging();
					this._TongChiTieu = value;
					this.SendPropertyChanged("TongChiTieu");
					this.OnTongChiTieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongDoanhThu", DbType="Float")]
		public System.Nullable<double> TongDoanhThu
		{
			get
			{
				return this._TongDoanhThu;
			}
			set
			{
				if ((this._TongDoanhThu != value))
				{
					this.OnTongDoanhThuChanging(value);
					this.SendPropertyChanging();
					this._TongDoanhThu = value;
					this.SendPropertyChanged("TongDoanhThu");
					this.OnTongDoanhThuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_DoanhThu", Storage="_HoaDon", ThisKey="MaHoaDon", OtherKey="MaHoaDon", IsForeignKey=true)]
		public HoaDon HoaDon
		{
			get
			{
				return this._HoaDon.Entity;
			}
			set
			{
				HoaDon previousValue = this._HoaDon.Entity;
				if (((previousValue != value) 
							|| (this._HoaDon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HoaDon.Entity = null;
						previousValue.DoanhThus.Remove(this);
					}
					this._HoaDon.Entity = value;
					if ((value != null))
					{
						value.DoanhThus.Add(this);
						this._MaHoaDon = value.MaHoaDon;
					}
					else
					{
						this._MaHoaDon = default(Nullable<int>);
					}
					this.SendPropertyChanged("HoaDon");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhapHang_DoanhThu", Storage="_NhapHang", ThisKey="MaNhapHang", OtherKey="MaNhapHang", IsForeignKey=true)]
		public NhapHang NhapHang
		{
			get
			{
				return this._NhapHang.Entity;
			}
			set
			{
				NhapHang previousValue = this._NhapHang.Entity;
				if (((previousValue != value) 
							|| (this._NhapHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhapHang.Entity = null;
						previousValue.DoanhThus.Remove(this);
					}
					this._NhapHang.Entity = value;
					if ((value != null))
					{
						value.DoanhThus.Add(this);
						this._MaNhapHang = value.MaNhapHang;
					}
					else
					{
						this._MaNhapHang = default(Nullable<int>);
					}
					this.SendPropertyChanged("NhapHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonDat")]
	public partial class DonDat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDonDat;
		
		private string _MaBan;
		
		private System.Nullable<double> _TongTien;
		
		private string _HinhThucThanhToan;
		
		private System.Nullable<double> _SoTienNhan;
		
		private System.Nullable<double> _SoTienTra;
		
		private string _MaKhuyenMai;
		
		private string _MaKhachHang;
		
		private EntitySet<ChiTietDonDat> _ChiTietDonDats;
		
		private EntitySet<HoaDon> _HoaDons;
		
		private EntityRef<Ban> _Ban;
		
		private EntityRef<KhachHangThanThiet> _KhachHangThanThiet;
		
		private EntityRef<KhuyenMai> _KhuyenMai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDonDatChanging(int value);
    partial void OnMaDonDatChanged();
    partial void OnMaBanChanging(string value);
    partial void OnMaBanChanged();
    partial void OnTongTienChanging(System.Nullable<double> value);
    partial void OnTongTienChanged();
    partial void OnHinhThucThanhToanChanging(string value);
    partial void OnHinhThucThanhToanChanged();
    partial void OnSoTienNhanChanging(System.Nullable<double> value);
    partial void OnSoTienNhanChanged();
    partial void OnSoTienTraChanging(System.Nullable<double> value);
    partial void OnSoTienTraChanged();
    partial void OnMaKhuyenMaiChanging(string value);
    partial void OnMaKhuyenMaiChanged();
    partial void OnMaKhachHangChanging(string value);
    partial void OnMaKhachHangChanged();
    #endregion
		
		public DonDat()
		{
			this._ChiTietDonDats = new EntitySet<ChiTietDonDat>(new Action<ChiTietDonDat>(this.attach_ChiTietDonDats), new Action<ChiTietDonDat>(this.detach_ChiTietDonDats));
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			this._Ban = default(EntityRef<Ban>);
			this._KhachHangThanThiet = default(EntityRef<KhachHangThanThiet>);
			this._KhuyenMai = default(EntityRef<KhuyenMai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDonDat", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDonDat
		{
			get
			{
				return this._MaDonDat;
			}
			set
			{
				if ((this._MaDonDat != value))
				{
					this.OnMaDonDatChanging(value);
					this.SendPropertyChanging();
					this._MaDonDat = value;
					this.SendPropertyChanged("MaDonDat");
					this.OnMaDonDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBan", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string MaBan
		{
			get
			{
				return this._MaBan;
			}
			set
			{
				if ((this._MaBan != value))
				{
					if (this._Ban.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaBanChanging(value);
					this.SendPropertyChanging();
					this._MaBan = value;
					this.SendPropertyChanged("MaBan");
					this.OnMaBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongTien", DbType="Float")]
		public System.Nullable<double> TongTien
		{
			get
			{
				return this._TongTien;
			}
			set
			{
				if ((this._TongTien != value))
				{
					this.OnTongTienChanging(value);
					this.SendPropertyChanging();
					this._TongTien = value;
					this.SendPropertyChanged("TongTien");
					this.OnTongTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhThucThanhToan", DbType="NVarChar(50)")]
		public string HinhThucThanhToan
		{
			get
			{
				return this._HinhThucThanhToan;
			}
			set
			{
				if ((this._HinhThucThanhToan != value))
				{
					this.OnHinhThucThanhToanChanging(value);
					this.SendPropertyChanging();
					this._HinhThucThanhToan = value;
					this.SendPropertyChanged("HinhThucThanhToan");
					this.OnHinhThucThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTienNhan", DbType="Float")]
		public System.Nullable<double> SoTienNhan
		{
			get
			{
				return this._SoTienNhan;
			}
			set
			{
				if ((this._SoTienNhan != value))
				{
					this.OnSoTienNhanChanging(value);
					this.SendPropertyChanging();
					this._SoTienNhan = value;
					this.SendPropertyChanged("SoTienNhan");
					this.OnSoTienNhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoTienTra", DbType="Float")]
		public System.Nullable<double> SoTienTra
		{
			get
			{
				return this._SoTienTra;
			}
			set
			{
				if ((this._SoTienTra != value))
				{
					this.OnSoTienTraChanging(value);
					this.SendPropertyChanging();
					this._SoTienTra = value;
					this.SendPropertyChanged("SoTienTra");
					this.OnSoTienTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhuyenMai", DbType="VarChar(12)")]
		public string MaKhuyenMai
		{
			get
			{
				return this._MaKhuyenMai;
			}
			set
			{
				if ((this._MaKhuyenMai != value))
				{
					if (this._KhuyenMai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhuyenMaiChanging(value);
					this.SendPropertyChanging();
					this._MaKhuyenMai = value;
					this.SendPropertyChanged("MaKhuyenMai");
					this.OnMaKhuyenMaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhachHang", DbType="VarChar(30)")]
		public string MaKhachHang
		{
			get
			{
				return this._MaKhachHang;
			}
			set
			{
				if ((this._MaKhachHang != value))
				{
					if (this._KhachHangThanThiet.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhachHangChanging(value);
					this.SendPropertyChanging();
					this._MaKhachHang = value;
					this.SendPropertyChanged("MaKhachHang");
					this.OnMaKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDat_ChiTietDonDat", Storage="_ChiTietDonDats", ThisKey="MaDonDat", OtherKey="MaDonDat")]
		public EntitySet<ChiTietDonDat> ChiTietDonDats
		{
			get
			{
				return this._ChiTietDonDats;
			}
			set
			{
				this._ChiTietDonDats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDat_HoaDon", Storage="_HoaDons", ThisKey="MaDonDat", OtherKey="MaDonDat")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ban_DonDat", Storage="_Ban", ThisKey="MaBan", OtherKey="MaBan", IsForeignKey=true)]
		public Ban Ban
		{
			get
			{
				return this._Ban.Entity;
			}
			set
			{
				Ban previousValue = this._Ban.Entity;
				if (((previousValue != value) 
							|| (this._Ban.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ban.Entity = null;
						previousValue.DonDats.Remove(this);
					}
					this._Ban.Entity = value;
					if ((value != null))
					{
						value.DonDats.Add(this);
						this._MaBan = value.MaBan;
					}
					else
					{
						this._MaBan = default(string);
					}
					this.SendPropertyChanged("Ban");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHangThanThiet_DonDat", Storage="_KhachHangThanThiet", ThisKey="MaKhachHang", OtherKey="MaKhachHang", IsForeignKey=true)]
		public KhachHangThanThiet KhachHangThanThiet
		{
			get
			{
				return this._KhachHangThanThiet.Entity;
			}
			set
			{
				KhachHangThanThiet previousValue = this._KhachHangThanThiet.Entity;
				if (((previousValue != value) 
							|| (this._KhachHangThanThiet.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHangThanThiet.Entity = null;
						previousValue.DonDats.Remove(this);
					}
					this._KhachHangThanThiet.Entity = value;
					if ((value != null))
					{
						value.DonDats.Add(this);
						this._MaKhachHang = value.MaKhachHang;
					}
					else
					{
						this._MaKhachHang = default(string);
					}
					this.SendPropertyChanged("KhachHangThanThiet");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhuyenMai_DonDat", Storage="_KhuyenMai", ThisKey="MaKhuyenMai", OtherKey="MaKhuyenMai", IsForeignKey=true)]
		public KhuyenMai KhuyenMai
		{
			get
			{
				return this._KhuyenMai.Entity;
			}
			set
			{
				KhuyenMai previousValue = this._KhuyenMai.Entity;
				if (((previousValue != value) 
							|| (this._KhuyenMai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhuyenMai.Entity = null;
						previousValue.DonDats.Remove(this);
					}
					this._KhuyenMai.Entity = value;
					if ((value != null))
					{
						value.DonDats.Add(this);
						this._MaKhuyenMai = value.MaKhuyenMai;
					}
					else
					{
						this._MaKhuyenMai = default(string);
					}
					this.SendPropertyChanged("KhuyenMai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDonDats(ChiTietDonDat entity)
		{
			this.SendPropertyChanging();
			entity.DonDat = this;
		}
		
		private void detach_ChiTietDonDats(ChiTietDonDat entity)
		{
			this.SendPropertyChanging();
			entity.DonDat = null;
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.DonDat = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.DonDat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDon")]
	public partial class HoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaHoaDon;
		
		private int _MaDonDat;
		
		private System.Nullable<System.DateTime> _NgayThanhToan;
		
		private EntitySet<DoanhThu> _DoanhThus;
		
		private EntityRef<DonDat> _DonDat;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaHoaDonChanging(int value);
    partial void OnMaHoaDonChanged();
    partial void OnMaDonDatChanging(int value);
    partial void OnMaDonDatChanged();
    partial void OnNgayThanhToanChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThanhToanChanged();
    #endregion
		
		public HoaDon()
		{
			this._DoanhThus = new EntitySet<DoanhThu>(new Action<DoanhThu>(this.attach_DoanhThus), new Action<DoanhThu>(this.detach_DoanhThus));
			this._DonDat = default(EntityRef<DonDat>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHoaDon", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaHoaDon
		{
			get
			{
				return this._MaHoaDon;
			}
			set
			{
				if ((this._MaHoaDon != value))
				{
					this.OnMaHoaDonChanging(value);
					this.SendPropertyChanging();
					this._MaHoaDon = value;
					this.SendPropertyChanged("MaHoaDon");
					this.OnMaHoaDonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDonDat", DbType="Int NOT NULL")]
		public int MaDonDat
		{
			get
			{
				return this._MaDonDat;
			}
			set
			{
				if ((this._MaDonDat != value))
				{
					if (this._DonDat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDonDatChanging(value);
					this.SendPropertyChanging();
					this._MaDonDat = value;
					this.SendPropertyChanged("MaDonDat");
					this.OnMaDonDatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThanhToan", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayThanhToan
		{
			get
			{
				return this._NgayThanhToan;
			}
			set
			{
				if ((this._NgayThanhToan != value))
				{
					this.OnNgayThanhToanChanging(value);
					this.SendPropertyChanging();
					this._NgayThanhToan = value;
					this.SendPropertyChanged("NgayThanhToan");
					this.OnNgayThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HoaDon_DoanhThu", Storage="_DoanhThus", ThisKey="MaHoaDon", OtherKey="MaHoaDon")]
		public EntitySet<DoanhThu> DoanhThus
		{
			get
			{
				return this._DoanhThus;
			}
			set
			{
				this._DoanhThus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonDat_HoaDon", Storage="_DonDat", ThisKey="MaDonDat", OtherKey="MaDonDat", IsForeignKey=true)]
		public DonDat DonDat
		{
			get
			{
				return this._DonDat.Entity;
			}
			set
			{
				DonDat previousValue = this._DonDat.Entity;
				if (((previousValue != value) 
							|| (this._DonDat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonDat.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._DonDat.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._MaDonDat = value.MaDonDat;
					}
					else
					{
						this._MaDonDat = default(int);
					}
					this.SendPropertyChanged("DonDat");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DoanhThus(DoanhThu entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = this;
		}
		
		private void detach_DoanhThus(DoanhThu entity)
		{
			this.SendPropertyChanging();
			entity.HoaDon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHangThanThiet")]
	public partial class KhachHangThanThiet : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKhachHang;
		
		private string _TenKhachHang;
		
		private string _SoDienThoai;
		
		private System.Nullable<int> _DiemTichLuy;
		
		private EntitySet<DonDat> _DonDats;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhachHangChanging(string value);
    partial void OnMaKhachHangChanged();
    partial void OnTenKhachHangChanging(string value);
    partial void OnTenKhachHangChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnDiemTichLuyChanging(System.Nullable<int> value);
    partial void OnDiemTichLuyChanged();
    #endregion
		
		public KhachHangThanThiet()
		{
			this._DonDats = new EntitySet<DonDat>(new Action<DonDat>(this.attach_DonDats), new Action<DonDat>(this.detach_DonDats));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhachHang", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKhachHang
		{
			get
			{
				return this._MaKhachHang;
			}
			set
			{
				if ((this._MaKhachHang != value))
				{
					this.OnMaKhachHangChanging(value);
					this.SendPropertyChanging();
					this._MaKhachHang = value;
					this.SendPropertyChanged("MaKhachHang");
					this.OnMaKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhachHang", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string TenKhachHang
		{
			get
			{
				return this._TenKhachHang;
			}
			set
			{
				if ((this._TenKhachHang != value))
				{
					this.OnTenKhachHangChanging(value);
					this.SendPropertyChanging();
					this._TenKhachHang = value;
					this.SendPropertyChanged("TenKhachHang");
					this.OnTenKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="VarChar(15)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiemTichLuy", DbType="Int")]
		public System.Nullable<int> DiemTichLuy
		{
			get
			{
				return this._DiemTichLuy;
			}
			set
			{
				if ((this._DiemTichLuy != value))
				{
					this.OnDiemTichLuyChanging(value);
					this.SendPropertyChanging();
					this._DiemTichLuy = value;
					this.SendPropertyChanged("DiemTichLuy");
					this.OnDiemTichLuyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHangThanThiet_DonDat", Storage="_DonDats", ThisKey="MaKhachHang", OtherKey="MaKhachHang")]
		public EntitySet<DonDat> DonDats
		{
			get
			{
				return this._DonDats;
			}
			set
			{
				this._DonDats.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DonDats(DonDat entity)
		{
			this.SendPropertyChanging();
			entity.KhachHangThanThiet = this;
		}
		
		private void detach_DonDats(DonDat entity)
		{
			this.SendPropertyChanging();
			entity.KhachHangThanThiet = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kho")]
	public partial class Kho : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSanPham;
		
		private string _TenSanPham;
		
		private int _SoLuong;
		
		private string _DonViTinh;
		
		private System.Nullable<double> _DonGia;
		
		private string _MaLoaiHang;
		
		private EntitySet<ChiTietCombo> _ChiTietCombos;
		
		private EntitySet<NhapHang> _NhapHangs;
		
		private EntityRef<LoaiHang> _LoaiHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSanPhamChanging(string value);
    partial void OnMaSanPhamChanged();
    partial void OnTenSanPhamChanging(string value);
    partial void OnTenSanPhamChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnDonViTinhChanging(string value);
    partial void OnDonViTinhChanged();
    partial void OnDonGiaChanging(System.Nullable<double> value);
    partial void OnDonGiaChanged();
    partial void OnMaLoaiHangChanging(string value);
    partial void OnMaLoaiHangChanged();
    #endregion
		
		public Kho()
		{
			this._ChiTietCombos = new EntitySet<ChiTietCombo>(new Action<ChiTietCombo>(this.attach_ChiTietCombos), new Action<ChiTietCombo>(this.detach_ChiTietCombos));
			this._NhapHangs = new EntitySet<NhapHang>(new Action<NhapHang>(this.attach_NhapHangs), new Action<NhapHang>(this.detach_NhapHangs));
			this._LoaiHang = default(EntityRef<LoaiHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanPham", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSanPham
		{
			get
			{
				return this._MaSanPham;
			}
			set
			{
				if ((this._MaSanPham != value))
				{
					this.OnMaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaSanPham = value;
					this.SendPropertyChanged("MaSanPham");
					this.OnMaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSanPham", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string TenSanPham
		{
			get
			{
				return this._TenSanPham;
			}
			set
			{
				if ((this._TenSanPham != value))
				{
					this.OnTenSanPhamChanging(value);
					this.SendPropertyChanging();
					this._TenSanPham = value;
					this.SendPropertyChanged("TenSanPham");
					this.OnTenSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonViTinh", DbType="NVarChar(50)")]
		public string DonViTinh
		{
			get
			{
				return this._DonViTinh;
			}
			set
			{
				if ((this._DonViTinh != value))
				{
					this.OnDonViTinhChanging(value);
					this.SendPropertyChanging();
					this._DonViTinh = value;
					this.SendPropertyChanged("DonViTinh");
					this.OnDonViTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Float")]
		public System.Nullable<double> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiHang", DbType="VarChar(20)")]
		public string MaLoaiHang
		{
			get
			{
				return this._MaLoaiHang;
			}
			set
			{
				if ((this._MaLoaiHang != value))
				{
					if (this._LoaiHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiHangChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiHang = value;
					this.SendPropertyChanged("MaLoaiHang");
					this.OnMaLoaiHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kho_ChiTietCombo", Storage="_ChiTietCombos", ThisKey="MaSanPham", OtherKey="MaSanPham")]
		public EntitySet<ChiTietCombo> ChiTietCombos
		{
			get
			{
				return this._ChiTietCombos;
			}
			set
			{
				this._ChiTietCombos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kho_NhapHang", Storage="_NhapHangs", ThisKey="MaSanPham", OtherKey="MaSanPham")]
		public EntitySet<NhapHang> NhapHangs
		{
			get
			{
				return this._NhapHangs;
			}
			set
			{
				this._NhapHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiHang_Kho", Storage="_LoaiHang", ThisKey="MaLoaiHang", OtherKey="MaLoaiHang", IsForeignKey=true)]
		public LoaiHang LoaiHang
		{
			get
			{
				return this._LoaiHang.Entity;
			}
			set
			{
				LoaiHang previousValue = this._LoaiHang.Entity;
				if (((previousValue != value) 
							|| (this._LoaiHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiHang.Entity = null;
						previousValue.Khos.Remove(this);
					}
					this._LoaiHang.Entity = value;
					if ((value != null))
					{
						value.Khos.Add(this);
						this._MaLoaiHang = value.MaLoaiHang;
					}
					else
					{
						this._MaLoaiHang = default(string);
					}
					this.SendPropertyChanged("LoaiHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietCombos(ChiTietCombo entity)
		{
			this.SendPropertyChanging();
			entity.Kho = this;
		}
		
		private void detach_ChiTietCombos(ChiTietCombo entity)
		{
			this.SendPropertyChanging();
			entity.Kho = null;
		}
		
		private void attach_NhapHangs(NhapHang entity)
		{
			this.SendPropertyChanging();
			entity.Kho = this;
		}
		
		private void detach_NhapHangs(NhapHang entity)
		{
			this.SendPropertyChanging();
			entity.Kho = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhuyenMai")]
	public partial class KhuyenMai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKhuyenMai;
		
		private System.DateTime _NgayBatDau;
		
		private System.DateTime _NgayKetThuc;
		
		private System.Nullable<decimal> _GiaTriGiam;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<bool> _TrangThai;
		
		private EntitySet<DonDat> _DonDats;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhuyenMaiChanging(string value);
    partial void OnMaKhuyenMaiChanged();
    partial void OnNgayBatDauChanging(System.DateTime value);
    partial void OnNgayBatDauChanged();
    partial void OnNgayKetThucChanging(System.DateTime value);
    partial void OnNgayKetThucChanged();
    partial void OnGiaTriGiamChanging(System.Nullable<decimal> value);
    partial void OnGiaTriGiamChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnTrangThaiChanging(System.Nullable<bool> value);
    partial void OnTrangThaiChanged();
    #endregion
		
		public KhuyenMai()
		{
			this._DonDats = new EntitySet<DonDat>(new Action<DonDat>(this.attach_DonDats), new Action<DonDat>(this.detach_DonDats));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhuyenMai", DbType="VarChar(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKhuyenMai
		{
			get
			{
				return this._MaKhuyenMai;
			}
			set
			{
				if ((this._MaKhuyenMai != value))
				{
					this.OnMaKhuyenMaiChanging(value);
					this.SendPropertyChanging();
					this._MaKhuyenMai = value;
					this.SendPropertyChanged("MaKhuyenMai");
					this.OnMaKhuyenMaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayBatDau", DbType="DateTime NOT NULL")]
		public System.DateTime NgayBatDau
		{
			get
			{
				return this._NgayBatDau;
			}
			set
			{
				if ((this._NgayBatDau != value))
				{
					this.OnNgayBatDauChanging(value);
					this.SendPropertyChanging();
					this._NgayBatDau = value;
					this.SendPropertyChanged("NgayBatDau");
					this.OnNgayBatDauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayKetThuc", DbType="DateTime NOT NULL")]
		public System.DateTime NgayKetThuc
		{
			get
			{
				return this._NgayKetThuc;
			}
			set
			{
				if ((this._NgayKetThuc != value))
				{
					this.OnNgayKetThucChanging(value);
					this.SendPropertyChanging();
					this._NgayKetThuc = value;
					this.SendPropertyChanged("NgayKetThuc");
					this.OnNgayKetThucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaTriGiam", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> GiaTriGiam
		{
			get
			{
				return this._GiaTriGiam;
			}
			set
			{
				if ((this._GiaTriGiam != value))
				{
					this.OnGiaTriGiamChanging(value);
					this.SendPropertyChanging();
					this._GiaTriGiam = value;
					this.SendPropertyChanged("GiaTriGiam");
					this.OnGiaTriGiamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrangThai", DbType="Bit")]
		public System.Nullable<bool> TrangThai
		{
			get
			{
				return this._TrangThai;
			}
			set
			{
				if ((this._TrangThai != value))
				{
					this.OnTrangThaiChanging(value);
					this.SendPropertyChanging();
					this._TrangThai = value;
					this.SendPropertyChanged("TrangThai");
					this.OnTrangThaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhuyenMai_DonDat", Storage="_DonDats", ThisKey="MaKhuyenMai", OtherKey="MaKhuyenMai")]
		public EntitySet<DonDat> DonDats
		{
			get
			{
				return this._DonDats;
			}
			set
			{
				this._DonDats.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DonDats(DonDat entity)
		{
			this.SendPropertyChanging();
			entity.KhuyenMai = this;
		}
		
		private void detach_DonDats(DonDat entity)
		{
			this.SendPropertyChanging();
			entity.KhuyenMai = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiHang")]
	public partial class LoaiHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoaiHang;
		
		private string _TenLoaiHang;
		
		private EntitySet<Kho> _Khos;
		
		private EntitySet<NhapHang> _NhapHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiHangChanging(string value);
    partial void OnMaLoaiHangChanged();
    partial void OnTenLoaiHangChanging(string value);
    partial void OnTenLoaiHangChanged();
    #endregion
		
		public LoaiHang()
		{
			this._Khos = new EntitySet<Kho>(new Action<Kho>(this.attach_Khos), new Action<Kho>(this.detach_Khos));
			this._NhapHangs = new EntitySet<NhapHang>(new Action<NhapHang>(this.attach_NhapHangs), new Action<NhapHang>(this.detach_NhapHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiHang", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoaiHang
		{
			get
			{
				return this._MaLoaiHang;
			}
			set
			{
				if ((this._MaLoaiHang != value))
				{
					this.OnMaLoaiHangChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiHang = value;
					this.SendPropertyChanged("MaLoaiHang");
					this.OnMaLoaiHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiHang", DbType="NVarChar(150) NOT NULL", CanBeNull=false)]
		public string TenLoaiHang
		{
			get
			{
				return this._TenLoaiHang;
			}
			set
			{
				if ((this._TenLoaiHang != value))
				{
					this.OnTenLoaiHangChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiHang = value;
					this.SendPropertyChanged("TenLoaiHang");
					this.OnTenLoaiHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiHang_Kho", Storage="_Khos", ThisKey="MaLoaiHang", OtherKey="MaLoaiHang")]
		public EntitySet<Kho> Khos
		{
			get
			{
				return this._Khos;
			}
			set
			{
				this._Khos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiHang_NhapHang", Storage="_NhapHangs", ThisKey="MaLoaiHang", OtherKey="MaLoaiHang")]
		public EntitySet<NhapHang> NhapHangs
		{
			get
			{
				return this._NhapHangs;
			}
			set
			{
				this._NhapHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Khos(Kho entity)
		{
			this.SendPropertyChanging();
			entity.LoaiHang = this;
		}
		
		private void detach_Khos(Kho entity)
		{
			this.SendPropertyChanging();
			entity.LoaiHang = null;
		}
		
		private void attach_NhapHangs(NhapHang entity)
		{
			this.SendPropertyChanging();
			entity.LoaiHang = this;
		}
		
		private void detach_NhapHangs(NhapHang entity)
		{
			this.SendPropertyChanging();
			entity.LoaiHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhaCungCap")]
	public partial class NhaCungCap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNhaCungCap;
		
		private string _TenNhaCungCap;
		
		private System.Data.Linq.Binary _AnhNhaCungCap;
		
		private string _DiaChi;
		
		private string _SoDienThoai;
		
		private string _GhiChu;
		
		private EntitySet<NhapHang> _NhapHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhaCungCapChanging(string value);
    partial void OnMaNhaCungCapChanged();
    partial void OnTenNhaCungCapChanging(string value);
    partial void OnTenNhaCungCapChanged();
    partial void OnAnhNhaCungCapChanging(System.Data.Linq.Binary value);
    partial void OnAnhNhaCungCapChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public NhaCungCap()
		{
			this._NhapHangs = new EntitySet<NhapHang>(new Action<NhapHang>(this.attach_NhapHangs), new Action<NhapHang>(this.detach_NhapHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhaCungCap", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNhaCungCap
		{
			get
			{
				return this._MaNhaCungCap;
			}
			set
			{
				if ((this._MaNhaCungCap != value))
				{
					this.OnMaNhaCungCapChanging(value);
					this.SendPropertyChanging();
					this._MaNhaCungCap = value;
					this.SendPropertyChanged("MaNhaCungCap");
					this.OnMaNhaCungCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhaCungCap", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string TenNhaCungCap
		{
			get
			{
				return this._TenNhaCungCap;
			}
			set
			{
				if ((this._TenNhaCungCap != value))
				{
					this.OnTenNhaCungCapChanging(value);
					this.SendPropertyChanging();
					this._TenNhaCungCap = value;
					this.SendPropertyChanged("TenNhaCungCap");
					this.OnTenNhaCungCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhNhaCungCap", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary AnhNhaCungCap
		{
			get
			{
				return this._AnhNhaCungCap;
			}
			set
			{
				if ((this._AnhNhaCungCap != value))
				{
					this.OnAnhNhaCungCapChanging(value);
					this.SendPropertyChanging();
					this._AnhNhaCungCap = value;
					this.SendPropertyChanged("AnhNhaCungCap");
					this.OnAnhNhaCungCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(200)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="VarChar(15)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(200)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_NhapHang", Storage="_NhapHangs", ThisKey="MaNhaCungCap", OtherKey="MaNhaCungCap")]
		public EntitySet<NhapHang> NhapHangs
		{
			get
			{
				return this._NhapHangs;
			}
			set
			{
				this._NhapHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NhapHangs(NhapHang entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = this;
		}
		
		private void detach_NhapHangs(NhapHang entity)
		{
			this.SendPropertyChanging();
			entity.NhaCungCap = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhanVien")]
	public partial class NhanVien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNhanVien;
		
		private System.Data.Linq.Binary _AnhNhanVien;
		
		private string _TenNhanVien;
		
		private string _GioiTinh;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _SoDienThoai;
		
		private string _Email;
		
		private string _DiaChi;
		
		private string _ChucVu;
		
		private System.Nullable<int> _SoGioLam;
		
		private EntitySet<Luong> _Luongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhanVienChanging(string value);
    partial void OnMaNhanVienChanged();
    partial void OnAnhNhanVienChanging(System.Data.Linq.Binary value);
    partial void OnAnhNhanVienChanged();
    partial void OnTenNhanVienChanging(string value);
    partial void OnTenNhanVienChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnChucVuChanging(string value);
    partial void OnChucVuChanged();
    partial void OnSoGioLamChanging(System.Nullable<int> value);
    partial void OnSoGioLamChanged();
    #endregion
		
		public NhanVien()
		{
			this._Luongs = new EntitySet<Luong>(new Action<Luong>(this.attach_Luongs), new Action<Luong>(this.detach_Luongs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhanVien", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNhanVien
		{
			get
			{
				return this._MaNhanVien;
			}
			set
			{
				if ((this._MaNhanVien != value))
				{
					this.OnMaNhanVienChanging(value);
					this.SendPropertyChanging();
					this._MaNhanVien = value;
					this.SendPropertyChanged("MaNhanVien");
					this.OnMaNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhNhanVien", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary AnhNhanVien
		{
			get
			{
				return this._AnhNhanVien;
			}
			set
			{
				if ((this._AnhNhanVien != value))
				{
					this.OnAnhNhanVienChanging(value);
					this.SendPropertyChanging();
					this._AnhNhanVien = value;
					this.SendPropertyChanged("AnhNhanVien");
					this.OnAnhNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenNhanVien", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string TenNhanVien
		{
			get
			{
				return this._TenNhanVien;
			}
			set
			{
				if ((this._TenNhanVien != value))
				{
					this.OnTenNhanVienChanging(value);
					this.SendPropertyChanging();
					this._TenNhanVien = value;
					this.SendPropertyChanged("TenNhanVien");
					this.OnTenNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(3)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="VarChar(15)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(150)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(300)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChucVu", DbType="NVarChar(100)")]
		public string ChucVu
		{
			get
			{
				return this._ChucVu;
			}
			set
			{
				if ((this._ChucVu != value))
				{
					this.OnChucVuChanging(value);
					this.SendPropertyChanging();
					this._ChucVu = value;
					this.SendPropertyChanged("ChucVu");
					this.OnChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoGioLam", DbType="Int")]
		public System.Nullable<int> SoGioLam
		{
			get
			{
				return this._SoGioLam;
			}
			set
			{
				if ((this._SoGioLam != value))
				{
					this.OnSoGioLamChanging(value);
					this.SendPropertyChanging();
					this._SoGioLam = value;
					this.SendPropertyChanged("SoGioLam");
					this.OnSoGioLamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_Luong", Storage="_Luongs", ThisKey="MaNhanVien", OtherKey="MaNhanVien")]
		public EntitySet<Luong> Luongs
		{
			get
			{
				return this._Luongs;
			}
			set
			{
				this._Luongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Luongs(Luong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = this;
		}
		
		private void detach_Luongs(Luong entity)
		{
			this.SendPropertyChanging();
			entity.NhanVien = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NhapHang")]
	public partial class NhapHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNhapHang;
		
		private string _MaSanPham;
		
		private int _SoLuong;
		
		private string _DonViTinh;
		
		private System.Nullable<double> _DonGia;
		
		private System.DateTime _NgayNhap;
		
		private string _MaLoaiHang;
		
		private string _MaNhaCungCap;
		
		private EntitySet<DoanhThu> _DoanhThus;
		
		private EntityRef<LoaiHang> _LoaiHang;
		
		private EntityRef<NhaCungCap> _NhaCungCap;
		
		private EntityRef<Kho> _Kho;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhapHangChanging(int value);
    partial void OnMaNhapHangChanged();
    partial void OnMaSanPhamChanging(string value);
    partial void OnMaSanPhamChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnDonViTinhChanging(string value);
    partial void OnDonViTinhChanged();
    partial void OnDonGiaChanging(System.Nullable<double> value);
    partial void OnDonGiaChanged();
    partial void OnNgayNhapChanging(System.DateTime value);
    partial void OnNgayNhapChanged();
    partial void OnMaLoaiHangChanging(string value);
    partial void OnMaLoaiHangChanged();
    partial void OnMaNhaCungCapChanging(string value);
    partial void OnMaNhaCungCapChanged();
    #endregion
		
		public NhapHang()
		{
			this._DoanhThus = new EntitySet<DoanhThu>(new Action<DoanhThu>(this.attach_DoanhThus), new Action<DoanhThu>(this.detach_DoanhThus));
			this._LoaiHang = default(EntityRef<LoaiHang>);
			this._NhaCungCap = default(EntityRef<NhaCungCap>);
			this._Kho = default(EntityRef<Kho>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhapHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNhapHang
		{
			get
			{
				return this._MaNhapHang;
			}
			set
			{
				if ((this._MaNhapHang != value))
				{
					this.OnMaNhapHangChanging(value);
					this.SendPropertyChanging();
					this._MaNhapHang = value;
					this.SendPropertyChanged("MaNhapHang");
					this.OnMaNhapHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSanPham", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string MaSanPham
		{
			get
			{
				return this._MaSanPham;
			}
			set
			{
				if ((this._MaSanPham != value))
				{
					if (this._Kho.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MaSanPham = value;
					this.SendPropertyChanged("MaSanPham");
					this.OnMaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonViTinh", DbType="NVarChar(50)")]
		public string DonViTinh
		{
			get
			{
				return this._DonViTinh;
			}
			set
			{
				if ((this._DonViTinh != value))
				{
					this.OnDonViTinhChanging(value);
					this.SendPropertyChanging();
					this._DonViTinh = value;
					this.SendPropertyChanged("DonViTinh");
					this.OnDonViTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Float")]
		public System.Nullable<double> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayNhap", DbType="DateTime NOT NULL")]
		public System.DateTime NgayNhap
		{
			get
			{
				return this._NgayNhap;
			}
			set
			{
				if ((this._NgayNhap != value))
				{
					this.OnNgayNhapChanging(value);
					this.SendPropertyChanging();
					this._NgayNhap = value;
					this.SendPropertyChanged("NgayNhap");
					this.OnNgayNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiHang", DbType="VarChar(20)")]
		public string MaLoaiHang
		{
			get
			{
				return this._MaLoaiHang;
			}
			set
			{
				if ((this._MaLoaiHang != value))
				{
					if (this._LoaiHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiHangChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiHang = value;
					this.SendPropertyChanged("MaLoaiHang");
					this.OnMaLoaiHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhaCungCap", DbType="VarChar(10)")]
		public string MaNhaCungCap
		{
			get
			{
				return this._MaNhaCungCap;
			}
			set
			{
				if ((this._MaNhaCungCap != value))
				{
					if (this._NhaCungCap.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNhaCungCapChanging(value);
					this.SendPropertyChanging();
					this._MaNhaCungCap = value;
					this.SendPropertyChanged("MaNhaCungCap");
					this.OnMaNhaCungCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhapHang_DoanhThu", Storage="_DoanhThus", ThisKey="MaNhapHang", OtherKey="MaNhapHang")]
		public EntitySet<DoanhThu> DoanhThus
		{
			get
			{
				return this._DoanhThus;
			}
			set
			{
				this._DoanhThus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiHang_NhapHang", Storage="_LoaiHang", ThisKey="MaLoaiHang", OtherKey="MaLoaiHang", IsForeignKey=true)]
		public LoaiHang LoaiHang
		{
			get
			{
				return this._LoaiHang.Entity;
			}
			set
			{
				LoaiHang previousValue = this._LoaiHang.Entity;
				if (((previousValue != value) 
							|| (this._LoaiHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiHang.Entity = null;
						previousValue.NhapHangs.Remove(this);
					}
					this._LoaiHang.Entity = value;
					if ((value != null))
					{
						value.NhapHangs.Add(this);
						this._MaLoaiHang = value.MaLoaiHang;
					}
					else
					{
						this._MaLoaiHang = default(string);
					}
					this.SendPropertyChanged("LoaiHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhaCungCap_NhapHang", Storage="_NhaCungCap", ThisKey="MaNhaCungCap", OtherKey="MaNhaCungCap", IsForeignKey=true)]
		public NhaCungCap NhaCungCap
		{
			get
			{
				return this._NhaCungCap.Entity;
			}
			set
			{
				NhaCungCap previousValue = this._NhaCungCap.Entity;
				if (((previousValue != value) 
							|| (this._NhaCungCap.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhaCungCap.Entity = null;
						previousValue.NhapHangs.Remove(this);
					}
					this._NhaCungCap.Entity = value;
					if ((value != null))
					{
						value.NhapHangs.Add(this);
						this._MaNhaCungCap = value.MaNhaCungCap;
					}
					else
					{
						this._MaNhaCungCap = default(string);
					}
					this.SendPropertyChanged("NhaCungCap");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kho_NhapHang", Storage="_Kho", ThisKey="MaSanPham", OtherKey="MaSanPham", IsForeignKey=true)]
		public Kho Kho
		{
			get
			{
				return this._Kho.Entity;
			}
			set
			{
				Kho previousValue = this._Kho.Entity;
				if (((previousValue != value) 
							|| (this._Kho.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Kho.Entity = null;
						previousValue.NhapHangs.Remove(this);
					}
					this._Kho.Entity = value;
					if ((value != null))
					{
						value.NhapHangs.Add(this);
						this._MaSanPham = value.MaSanPham;
					}
					else
					{
						this._MaSanPham = default(string);
					}
					this.SendPropertyChanged("Kho");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DoanhThus(DoanhThu entity)
		{
			this.SendPropertyChanging();
			entity.NhapHang = this;
		}
		
		private void detach_DoanhThus(DoanhThu entity)
		{
			this.SendPropertyChanging();
			entity.NhapHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Luong")]
	public partial class Luong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNhanVien;
		
		private System.Nullable<int> _LuongCoBan;
		
		private int _Thang;
		
		private System.Nullable<int> _SoNgayLam;
		
		private System.Nullable<int> _ThuongChuyenCan;
		
		private System.Nullable<int> _ThuongHieuSuat;
		
		private EntityRef<NhanVien> _NhanVien;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNhanVienChanging(string value);
    partial void OnMaNhanVienChanged();
    partial void OnLuongCoBanChanging(System.Nullable<int> value);
    partial void OnLuongCoBanChanged();
    partial void OnThangChanging(int value);
    partial void OnThangChanged();
    partial void OnSoNgayLamChanging(System.Nullable<int> value);
    partial void OnSoNgayLamChanged();
    partial void OnThuongChuyenCanChanging(System.Nullable<int> value);
    partial void OnThuongChuyenCanChanged();
    partial void OnThuongHieuSuatChanging(System.Nullable<int> value);
    partial void OnThuongHieuSuatChanged();
    #endregion
		
		public Luong()
		{
			this._NhanVien = default(EntityRef<NhanVien>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNhanVien", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNhanVien
		{
			get
			{
				return this._MaNhanVien;
			}
			set
			{
				if ((this._MaNhanVien != value))
				{
					if (this._NhanVien.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNhanVienChanging(value);
					this.SendPropertyChanging();
					this._MaNhanVien = value;
					this.SendPropertyChanged("MaNhanVien");
					this.OnMaNhanVienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LuongCoBan", DbType="Int")]
		public System.Nullable<int> LuongCoBan
		{
			get
			{
				return this._LuongCoBan;
			}
			set
			{
				if ((this._LuongCoBan != value))
				{
					this.OnLuongCoBanChanging(value);
					this.SendPropertyChanging();
					this._LuongCoBan = value;
					this.SendPropertyChanged("LuongCoBan");
					this.OnLuongCoBanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thang", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Thang
		{
			get
			{
				return this._Thang;
			}
			set
			{
				if ((this._Thang != value))
				{
					this.OnThangChanging(value);
					this.SendPropertyChanging();
					this._Thang = value;
					this.SendPropertyChanged("Thang");
					this.OnThangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoNgayLam", DbType="Int")]
		public System.Nullable<int> SoNgayLam
		{
			get
			{
				return this._SoNgayLam;
			}
			set
			{
				if ((this._SoNgayLam != value))
				{
					this.OnSoNgayLamChanging(value);
					this.SendPropertyChanging();
					this._SoNgayLam = value;
					this.SendPropertyChanged("SoNgayLam");
					this.OnSoNgayLamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThuongChuyenCan", DbType="Int")]
		public System.Nullable<int> ThuongChuyenCan
		{
			get
			{
				return this._ThuongChuyenCan;
			}
			set
			{
				if ((this._ThuongChuyenCan != value))
				{
					this.OnThuongChuyenCanChanging(value);
					this.SendPropertyChanging();
					this._ThuongChuyenCan = value;
					this.SendPropertyChanged("ThuongChuyenCan");
					this.OnThuongChuyenCanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThuongHieuSuat", DbType="Int")]
		public System.Nullable<int> ThuongHieuSuat
		{
			get
			{
				return this._ThuongHieuSuat;
			}
			set
			{
				if ((this._ThuongHieuSuat != value))
				{
					this.OnThuongHieuSuatChanging(value);
					this.SendPropertyChanging();
					this._ThuongHieuSuat = value;
					this.SendPropertyChanged("ThuongHieuSuat");
					this.OnThuongHieuSuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NhanVien_Luong", Storage="_NhanVien", ThisKey="MaNhanVien", OtherKey="MaNhanVien", IsForeignKey=true)]
		public NhanVien NhanVien
		{
			get
			{
				return this._NhanVien.Entity;
			}
			set
			{
				NhanVien previousValue = this._NhanVien.Entity;
				if (((previousValue != value) 
							|| (this._NhanVien.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NhanVien.Entity = null;
						previousValue.Luongs.Remove(this);
					}
					this._NhanVien.Entity = value;
					if ((value != null))
					{
						value.Luongs.Add(this);
						this._MaNhanVien = value.MaNhanVien;
					}
					else
					{
						this._MaNhanVien = default(string);
					}
					this.SendPropertyChanged("NhanVien");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
